@tailwind base;
@tailwind components;
@tailwind utilities;

html {
    @apply overflow-auto;
}

body {
    margin: 0;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',
        'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',
        'Helvetica Neue', sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

code {
    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
        monospace;
}

h1 {
    font-size: 2.5rem;
    margin: 0;
}

h2,
a {
    font-size: 1.5rem;
    margin: 0;
}

a {
    text-decoration: none;
    display: inline-block;
    position: relative;
    color: #0087ca;
    font-weight: bold;
}

a:after {
    content: '';
    position: absolute;
    width: 100%;
    transform: scaleX(0);
    height: 2px;
    bottom: 0;
    left: 0;
    background-color: #0087ca;
    transform-origin: bottom right;
    transition: transform 0.25s ease-out;
}

a:hover:after {
    transform: scaleX(1);
    transform-origin: bottom left;
}

.shadow,
.modalPage {
    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
}

.frosted,
.modalPage {
    backdrop-filter: blur(5px);
}

.cursorPoint {
    @apply absolute h-2 w-2 rounded-full bg-black;
    @apply z-[100] translate-x-[-50%] translate-y-[-50%];
    @apply pointer-events-none select-none;
    @apply transition-opacity;
}

.fade-appear,
.fade-enter {
    opacity: 0;
}

.fade-appear-active,
.fade-enter-active {
    transition: opacity 0.3s linear;
    opacity: 1;
}

.fade-exit {
    transition: opacity 0.2s linear;
    opacity: 1;
}

.fade-exit-active {
    opacity: 0;
}

.settingsButton {
    @apply fixed right-8 top-8 z-[10];
}

.settingsButton > div {
    @apply flex h-5 w-5 bg-black;
    @apply transition-all duration-200 ease-in-out;
}

.settingsButton:not(.settingsHidden) {
    @apply hover:cursor-pointer;
}

.settingsButton:not(.settingsHidden):hover > div {
    @apply rotate-90 scale-150;
}

.settingsHidden > div {
    @apply scale-0;
}

.modal {
    opacity: 0;
    background-color: rgba(0, 0, 0, 0.3);
    display: flex;
    height: 100%;
    justify-content: center;
    align-items: center;
    text-align: center;
    overflow: hidden;
    position: fixed;
    inset: 0px;
    z-index: 50;
}

.settingsModal {
    background-color: rgba(255, 150, 255, 0.4);
}

.modalPage {
    transform: translateY(100px) rotate(30deg);
    display: flex;
    width: min(400px, 85vw);
    flex-direction: column;
    align-items: center;
    background-color: white;
    border-radius: 2rem;
}

.settingsModalPage {
    padding: 2rem;
    padding-bottom: 0;
}

.settingsContent {
    @apply mt-8 mb-8;
    @apply flex flex-col;
}

.settingsContent > div {
    @apply flex flex-row items-center justify-around;
}

.settingsSlider > div {
    width: 100%;
}

.settingsModalPage > a {
    margin-bottom: 1rem;
}

.modal,
.modalPage {
    transition: all 180ms ease-in-out;
}

.modal.ReactModal__Overlay--after-open {
    opacity: 1;
}

.modal.ReactModal__Overlay--after-open .modalPage {
    transform: translateY(0) rotate(0deg);
}

.modal.ReactModal__Overlay--before-close {
    opacity: 0;
}

.modal.ReactModal__Overlay--before-close .modalPage {
    transform: translateY(100px) rotate(-30deg);
    opacity: 0;
}

.settingsSlider {
    width: 70%;
}

.horizontal-slider {
    display: flex;
    width: 100%;
    margin: 2rem;
}

.example-thumb {
    cursor: pointer;
    position: absolute;
    z-index: 100;
    background: #ffffff;
    border: 5px solid #3774ff;
    border-radius: 100%;
    display: block;
    box-shadow: 0 0 2px 0 rgb(0 0 0 / 44%);
}

.example-thumb.active {
    background-color: grey;
}

.example-track {
    position: relative;
    background: #ddd;
}

.example-track.example-track-0 {
    background: #83a9ff;
}

.horizontal-slider .example-track {
    height: 4px;
}

.horizontal-slider .example-thumb {
    top: -7px;
    width: 10px;
    outline: none;
    height: 10px;
    line-height: 38px;
}

input {
    @apply text-center;
    @apply rounded-lg border-2;
}

.formModalPage {
    @apply transition-[width] transition-[height] duration-200 ease-in-out;
}

.formModalPage > * {
    @apply m-2;
}

@keyframes buttonShake {
    10%,
    90% {
        transform: translate3d(-1px, 0, 0);
    }

    20%,
    80% {
        transform: translate3d(2px, 0, 0);
    }

    30%,
    50%,
    70% {
        transform: translate3d(-4px, 0, 0);
    }

    40%,
    60% {
        transform: translate3d(4px, 0, 0);
    }
}

.button {
    @apply select-none text-center opacity-30 transition-all;
    @apply m-2 min-w-[5rem] rounded-xl bg-gray-300 p-3;
}
.buttonActive:not(.buttonError) {
    @apply bg-blue-300 opacity-100 shadow-sm;
    @apply hover:cursor-pointer;
    background-image: linear-gradient(to right, orange);
    background-position: 0% 100%;
    background-repeat: no-repeat;
    background-size: 0% 100%;
    @apply hover:bg-[length:100%];
}
.buttonError {
    @apply bg-red-300 opacity-100 shadow-sm;
    animation: buttonShake 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
}

.digitInput {
    @apply flex flex-row;
    @apply justify-center align-middle;
}
.digitInput input {
    @apply m-2 h-[length:3rem] w-[length:3rem];
    @apply rounded-lg border-2 border-gray-300;
}

.loadingScreen {
    @apply pointer-events-none fixed z-50 flex h-[100vh] w-[100vw] select-none items-center justify-center;
}

.loadingScreenSpinner {
    @apply flex flex-col items-center justify-center;
}

.loadingScreenSpinner * {
    @apply relative z-[60] m-4;
}

.serverLoadingText {
    @apply rounded-full bg-white shadow-lg;
}

.serverErrorCode {
    @apply absolute bottom-0 right-0;
    @apply pointer-events-auto select-text;
}

.curtain {
    @apply pointer-events-auto !opacity-100;
    position: fixed;
    top: 0;
    width: 50%;
    height: 100%;
    background-color: rgba(255, 0, 0, 1);
    transition: 300ms;
}

.curtainLeft {
    left: 0;
}

.curtainRight {
    right: 0;
}

.curtainHolder-exit .loadingScreenSpinner,
.curtainHolder-exit-done .loadingScreenSpinner {
    opacity: 0;
}

.curtainHolder-exit .curtain,
.curtainHolder-exit-done .curtain {
    @apply w-0;
}

.curtainHolder-exit-done {
    @apply hidden;
}

.page {
    width: 100%;
    height: 100%;
    transition: 300ms;
    display: flex;
}

.creatureBox {
    @apply relative flex w-fit shadow-inner;
}

.glass {
    @apply absolute h-full w-full bg-blue-500 opacity-20;
}

.glass::before {
    @apply m-4 inline-block h-16 w-16 content-[''];
    @apply rounded-full bg-white;
}

.grass {
    @apply absolute bottom-0;
    @apply flex h-8 w-full;
    @apply bg-green-500 drop-shadow-2xl;
}

.creatureBoxBack,
.creatureBoxFront {
    @apply pointer-events-none relative select-none;
    @apply flex;
}

.creatureBox > div {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    user-select: none;
}

.physicsObject {
    @apply absolute translate-x-[-50%] translate-y-[-50%];
    @apply flex h-[100%] w-[100%] justify-center align-middle;
    @apply select-all rounded-[100%] text-center shadow-xl;
}

.creatureEyebox {
    @apply absolute flex w-full flex-row justify-center align-middle;
}

.creatureEyeNeutral,
.creatureEyeNeutral * {
    @apply delay-1000 duration-100;
}

.creatureEye {
    @apply overflow-hidden rounded-[100%] bg-white;
    @apply border-4 border-black;
    @apply flex justify-center align-middle;
    @apply relative;
}

.creatureEyeSpacer {
    @apply flex;
}

.creatureEyeball {
    @apply absolute flex h-3/4 w-3/4 rounded-[50%];
    @apply translate-x-[-50%] translate-y-[-50%] bg-black;
    @apply left-[35%] top-[45%];
}

.creatureEye:first-child .creatureEyeball {
    @apply left-[65%];
}

.creatureTag {
    @apply pointer-events-auto z-50 select-none hover:cursor-pointer;
    @apply flex h-min w-min;
}

.creatureTag > div {
    @apply translate-y-[-50%];
    @apply h-4 w-4 rounded-full bg-black transition-all;
}

.creatureTag:hover > div {
    @apply hover:h-7 hover:w-7;
}

.backstreetCovered {
    width: 100%;
    height: 100%;
}

.backstreetTarget {
    background-color: #000000;
    width: 10rem;
    height: 10rem;
}

.backstreetTarget:hover {
    cursor: pointer;
}
